name: Deploy to EC2 + NotificaciÃ³n a Discord

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ec2-3-128-13-108.us-east-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@ec2-3-128-13-108.us-east-2.compute.amazonaws.com << 'EOF'
            set -e  # Detener si hay un error

            # Borrar carpeta anterior si existe
            rm -rf ~/template_cpepr

            # Clonar nuevamente
            git clone https://github.com/ivargas58/template_cpepr.git ~/template_cpepr
            cd ~/template_cpepr

            # Crear el archivo .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "FIX_SECRET=${{ secrets.FIX_SECRET }}" >> .env

            # Instalar dependencias
            npm install

            # Instalar PM2 si no existe
            if ! command -v pm2 &> /dev/null
            then
              sudo npm install -g pm2
            fi

            # Detener proceso viejo si existe
            pm2 delete template_cpepr || true

            # Iniciar el servidor
            pm2 start ecosystem.config.js --name template_cpepr
            pm2 save
          EOF

      - name: Notificar Deploy a Discord
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          ACTOR: ${{ github.actor }}
          MESSAGE: ${{ github.event.head_commit.message }}
          BRANCH: ${{ github.ref }}
          REPOSITORY: ${{ github.repository }}
          TIMESTAMP: ${{ github.event.head_commit.timestamp }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          COMMIT_URL="https://github.com/${REPOSITORY}/commit/${COMMIT_SHA}"

          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{
            "embeds": [{
              "title": "âœ… Nuevo Deploy en EC2",
              "color": 5814783,
              "fields": [
                {"name": "Usuario", "value": "'"$ACTOR"'", "inline": true},
                {"name": "Branch", "value": "'"$BRANCH"'", "inline": true},
                {"name": "Repositorio", "value": "'"$REPOSITORY"'", "inline": false},
                {"name": "Commit", "value": "'"$MESSAGE"'", "inline": false},
                {"name": "Ver Commit", "value": "[Click aquÃ­ para ver el commit]('"$COMMIT_URL"')", "inline": false},
                {"name": "Fecha", "value": "'"$TIMESTAMP"'", "inline": false}
              ],
              "footer": {
                "text": "Deploy realizado automÃ¡ticamente ðŸš€"
              }
            }]
          }' \
          "$WEBHOOK_URL"
